"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _OpenEditorRequestData = _interopRequireDefault(require("./OpenEditorRequestData"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * The OpenEditorRequest model module.
 * @module model/OpenEditorRequest
 * @version 4.0.3
 */
var OpenEditorRequest = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>OpenEditorRequest</code>.
   * @alias module:model/OpenEditorRequest
   */
  function OpenEditorRequest() {
    _classCallCheck(this, OpenEditorRequest);

    OpenEditorRequest.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(OpenEditorRequest, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>OpenEditorRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpenEditorRequest} obj Optional instance to populate.
     * @return {module:model/OpenEditorRequest} The populated <code>OpenEditorRequest</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new OpenEditorRequest();

        if (data.hasOwnProperty('data')) {
          obj['data'] = _OpenEditorRequestData["default"].constructFromObject(data['data']);
        }

        if (data.hasOwnProperty('language')) {
          obj['language'] = _ApiClient["default"].convertToType(data['language'], 'String');
        }
      }

      return obj;
    }
    /**
     * Validates the JSON data with respect to <code>OpenEditorRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OpenEditorRequest</code>.
     */

  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // validate the optional field `data`
      if (data['data']) {
        // data not null
        _OpenEditorRequestData["default"].validateJSON(data['data']);
      } // ensure the json data is a string


      if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
        throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
      }

      return true;
    }
  }]);

  return OpenEditorRequest;
}();
/**
 * @member {module:model/OpenEditorRequestData} data
 */


OpenEditorRequest.prototype['data'] = undefined;
/**
 * Specify the editor UI language. Defaults to organization editor language.
 * @member {module:model/OpenEditorRequest.LanguageEnum} language
 */

OpenEditorRequest.prototype['language'] = undefined;
/**
 * Allowed values for the <code>language</code> property.
 * @enum {String}
 * @readonly
 */

OpenEditorRequest['LanguageEnum'] = {
  /**
   * value: "en"
   * @const
   */
  "en": "en",

  /**
   * value: "et"
   * @const
   */
  "et": "et",

  /**
   * value: "cs"
   * @const
   */
  "cs": "cs",

  /**
   * value: "sk"
   * @const
   */
  "sk": "sk",

  /**
   * value: "ru"
   * @const
   */
  "ru": "ru",

  /**
   * value: "de"
   * @const
   */
  "de": "de"
};
var _default = OpenEditorRequest;
exports["default"] = _default;