"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _ConvertHTML2PDFRequest = _interopRequireDefault(require("../model/ConvertHTML2PDFRequest"));

var _ConvertURL2PDFRequest = _interopRequireDefault(require("../model/ConvertURL2PDFRequest"));

var _GenerateDocument201Response = _interopRequireDefault(require("../model/GenerateDocument201Response"));

var _GetTemplates401Response = _interopRequireDefault(require("../model/GetTemplates401Response"));

var _GetTemplates402Response = _interopRequireDefault(require("../model/GetTemplates402Response"));

var _GetTemplates403Response = _interopRequireDefault(require("../model/GetTemplates403Response"));

var _GetTemplates404Response = _interopRequireDefault(require("../model/GetTemplates404Response"));

var _GetTemplates422Response = _interopRequireDefault(require("../model/GetTemplates422Response"));

var _GetTemplates429Response = _interopRequireDefault(require("../model/GetTemplates429Response"));

var _GetTemplates500Response = _interopRequireDefault(require("../model/GetTemplates500Response"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
* Conversion service.
* @module PDFGeneratorAPI/ConversionApi
* @version 4.0.3
*/
var ConversionApi = /*#__PURE__*/function () {
  /**
  * Constructs a new ConversionApi. 
  * @alias module:PDFGeneratorAPI/ConversionApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function ConversionApi(apiClient) {
    _classCallCheck(this, ConversionApi);

    this.apiClient = apiClient || _ApiClient["default"].instance;
  }
  /**
   * Callback function to receive the result of the convertHTML2PDF operation.
   * @callback module:PDFGeneratorAPI/ConversionApi~convertHTML2PDFCallback
   * @param {String} error Error message, if any.
   * @param {module:model/GenerateDocument201Response} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * HTML to PDF
   * Converts HTML content to PDF
   * @param {module:model/ConvertHTML2PDFRequest} convert_html2_pdf_request 
   * @param {module:PDFGeneratorAPI/ConversionApi~convertHTML2PDFCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/GenerateDocument201Response}
   */


  _createClass(ConversionApi, [{
    key: "convertHTML2PDF",
    value: function convertHTML2PDF(convert_html2_pdf_request, callback) {
      var postBody = convert_html2_pdf_request; // verify the required parameter 'convert_html2_pdf_request' is set

      if (convert_html2_pdf_request === undefined || convert_html2_pdf_request === null) {
        throw new Error("Missing the required parameter 'convert_html2_pdf_request' when calling convertHTML2PDF");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['JSONWebTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _GenerateDocument201Response["default"];
      return this.apiClient.callApi('/conversion/html2pdf', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }
    /**
     * Callback function to receive the result of the convertURL2PDF operation.
     * @callback module:PDFGeneratorAPI/ConversionApi~convertURL2PDFCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenerateDocument201Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * URL to PDF
     * Converts public URL to PDF
     * @param {module:model/ConvertURL2PDFRequest} convert_url2_pdf_request 
     * @param {module:PDFGeneratorAPI/ConversionApi~convertURL2PDFCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenerateDocument201Response}
     */

  }, {
    key: "convertURL2PDF",
    value: function convertURL2PDF(convert_url2_pdf_request, callback) {
      var postBody = convert_url2_pdf_request; // verify the required parameter 'convert_url2_pdf_request' is set

      if (convert_url2_pdf_request === undefined || convert_url2_pdf_request === null) {
        throw new Error("Missing the required parameter 'convert_url2_pdf_request' when calling convertURL2PDF");
      }

      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['JSONWebTokenAuth'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _GenerateDocument201Response["default"];
      return this.apiClient.callApi('/conversion/url2pdf', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null, callback);
    }
  }]);

  return ConversionApi;
}();

exports["default"] = ConversionApi;